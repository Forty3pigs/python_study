# >, <, >=, <=, ==, !=
# not, and, or не путать с ^, &, |
# первые - логические, вторые - побитовые
# плюс чисто питоновские: is, is not, in, not in

a = 1 < 4 and 5 > 3 or 4 != 5
print(f'значение выражения 1 < 4 and 5 > 3 or 4 != 5 равно {a}')
a = 'qwe'
b = 'qwe'
print(f'сравним строки "qwe" и "qwe": {a == b}')
a = [1, 2]
b = [1, 2]
# списки сравниваются поэлементно
print(f'сравнение списка {a} и списка {b} даст нам {a == b}')
a = 1 < 3 < 5 < 10  # можно и такие
print('1 < 3 < 5 < 10 будет работать и равно ', a)
print()

func = 1
T = 4
x = 123
print(func < T > (x))  # это просто двойное неравенство, хоть и выглидит сишарпно
print('^^^ развлечение в стиле C# \n')

a = [1, 2, 3, 8]
print('задаём список ', a)
n = 2
# двойка содержится в списке, следовательно True
print(f'проверка, входит ли {n} в {a} даёт {n in a}')
n = 5
print(f'проверка, НЕ входит ли {n} в {a} даёт {not n in a}')  # 5ки нет - True
print()

# определяем чётность
is_even = a[2] % 2 == 0  # 3-ка нечётная - False
print(f'проверим чётность {a[2]}: {is_even}')

# так же можно проверить делимость нацело на любое другое
# остаток от деления 8 на 2 равно 0(False), значит not False, значит True
is_even = not a[3] % 2
print(f'проверим чётность {a[3]} другим способом: {is_even}')
print()

print(f'да и вообще в питоне 1==True это {1 == True}')
print(f'0==True это {0 == True}')
print(f'a 3==True это {3 == True}')
